@using Main.ViewModels;
@model AssetListViewModel


<html>
<head>
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>

    <script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.7/jquery.validate.min.js"></script>
    <script src="https://code.jquery.com/jquery-migrate-3.0.0.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css" />
    <script src="~/Scripts/signalr-client-1.0.0-alpha2-final.js"></script>
</head>

<body>
    <nav class="navbar navbar-inverse  navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                </button>

            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="active"><a href="@Url.Action("List","Asset")">Asset <span class="sr-only">(current)</span></a></li>
                    <li><a href="@Url.Action("Index","TaskQueue")">Task Queue</a></li>
                    <li><a href="@Url.Action("Index", "Reporting")">Reporting <span class="sr-only"></span></a></li>
                    <li><a href="@Url.Action("Index", "UserProfile")">User Profile</a></li>
                    <span class="navbar-text" style="color: #e3f2fd;font-family:verdana;">
                        @Model.FirstName @Model.LastName
                    </span>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>

    <div id="alertBox" style="padding-top:0px !important; text-align:center !important; border-style: solid; border-color:#dc3545!important; background-color:#dc3545!important" class="hidden">
        Your view is outdated.  Please <a href="javascript:refreshPage()">refresh</a> the page to get the latest data.
    </div>

    <h2 align="center">@ViewBag.Title</h2>

    <br />

    <div id="allAssetGrid" style="margin-left:5px !important; margin-right:5px !important"></div>

    <div id="assetDialog">
        <form id="assetForm">
            <div class="details-form-field">
                <input type="hidden" value="" id="assetId" name="assetId">
            </div>
            <div class="details-form-field">
                <label for="name">Asset Name</label>
                <input id="assetName" name="assetName" type="text" />
            </div>
            <div class="details-form-field">
                <label for="shortDescription">Short Description</label>
                <input id="shortDescription" name="shortDescription" type="text" />
            </div>
            <div class="details-form-field">
                <label for="longDescription">Long Description</label>
                <input id="longDescription" name="longDescription" type="text" />
            </div>
            <div class="details-form-field">
                <label for="assetType">Asset Type</label>
                <select id="assetType" name="assetType" ; />
                <!-- these options are pulled in as the names of the AssetTypes from the database -->
                <option value="">Select..</option>
                </select>
            </div>
            <div class="details-form-field">
                <label for="assetModule">Asset Module</label>
                <select id="assetModule" name="assetModule" ; />
                <!-- these options are pulled in as the names of the Modules from the database -->
                <option value="">Select..</option>
                </select>
            </div>
            <div class="details-form-field">
                <label for="isPreferredAsset"> Is Preferred Asset</label>
                <input type="checkbox" id="isPreferredAsset" name="isPreferredAsset">
            </div>
            <div class="details-form-field">
                <label for="owner">Owner</label>
                <input id="owner" name="owner" type="text" />
            </div>
            <div class="details-form-field">
                <button type="submit" id="save">Save</button>
            </div>
        </form>
    </div>

    <input type="button" id="sendSignalRAlert" value="Send" class="hidden" />
</body>
</html>

<script>
    var assetList;
    $(document).ready(function () {
        $.ajax({
            url: "/Asset/GetAssets",
            dataType: 'application/json',
            complete: function (data) {
                assetList = JSON.parse(data["responseText"]);
                buildAssetGrid(assetList);
            }
        });

        // add all asset types and modules to form dynamically from database table on page load
        addAssetTypesToForm();
        addAssetModulesToForm();
    });

    var deletedItem;
    function buildAssetGrid(allAssets) {
        $("#allAssetGrid").jsGrid({
            width: "100%",
            height: "auto",
            autoload: false,
            paging: true,
            pageSize: 5,
            pageButtonCount: 5,
            pageIndex: 1,
            data: allAssets,
            editItem: function (item) {
                showDetailsDialog("Edit", item);
            },
            deleteConfirm: function (item) {
                deletedItem = item;
                return "The asset \"" + item.assetName + "\" will be removed. Are you sure?";
            },
            onItemDeleted: function (item) {
                $.ajax({
                    async: false,
                    url: "/Asset/DeleteAsset",
                    dataType: 'application/json',
                    data: {
                        assetId: deletedItem.assetId,
                        name: deletedItem.assetName,
                        shortDescription: deletedItem.shortDescription,
                        longDescription: deletedItem.longDescription,
                        isPreferredAsset: deletedItem.isPreferredAsset,
                        assetType: deletedItem.assetType
                    },
                    complete: function (data) {
                        triggeredAlert = true;
                        var button = document.getElementById("sendSignalRAlert");
                        button.click();

                        var response = JSON.parse(data.responseText);

                        if (confirm(response.message)) {
                            $("#allAssetGrid").jsGrid("refresh");
                        }
                        else {
                            $("#allAssetGrid").jsGrid("refresh");
                        }
                    }
                });
            },
            onItemUpdated: function (item) {
                var assetID = $("#assetId").val();
                var assetName = $("#assetName").val();
                var assetShortDescription = $("#shortDescription").val();
                var assetLongDescription = $("#longDescription").val();
                var isPreferredAsset = document.getElementById("isPreferredAsset").checked;
                var assetType = $("#assetType").val();
                var ownerName = $("#owner").val();
                var moduleNameSelection = $("#assetModule").val();

                $.ajax({
                    url: "/Asset/ModifyAsset",
                    dataType: 'application/json',
                    data: {
                        assetId: assetID,
                        name: assetName,
                        shortDescription: assetShortDescription,
                        longDescription: assetLongDescription,
                        isPreferredAsset: isPreferredAsset,
                        assetType: assetType,
                        owner: ownerName,
                        moduleName: moduleNameSelection
                    },
                    complete: function (data) {
                        var response = JSON.parse(data.responseText);

                        if (response.validOwner == false || response.duplicateAsset == true) {
                            // invalid owner message or duplicate asset message to user
                            window.alert(response.message);
                        }
                        else {
                            if (response.isUpdated == false) {
                                // error message
                                window.alert(response.message);
                            }
                            else {
                                triggeredAlert = true;
                                var button = document.getElementById("sendSignalRAlert");
                                button.click();

                                if (confirm(response.message)) {
                                    // refresh assets list
                                    $("#assetDialog").dialog("close");
                                    var updatedAssetList = response.updatedAssets;
                                    var uAL = updatedAssetList["value"];
                                    buildAssetGrid(uAL);
                                }
                                else {
                                    // refresh assets list
                                    $("#assetDialog").dialog("close");
                                    var updatedAssetList = response.updatedAssets;
                                    var uAL = updatedAssetList["value"];
                                    buildAssetGrid(uAL);
                                }
                            }
                        }
                    }
                });
            },
            onItemInserted: function (item) {
                var assetID = $("#assetId").val();
                var assetName = $("#assetName").val();
                var assetShortDescription = $("#shortDescription").val();
                var assetLongDescription = $("#longDescription").val();
                var isPreferredAsset = document.getElementById("isPreferredAsset").checked;
                var assetType = $("#assetType").val();
                var ownerName = $("#owner").val();
                var moduleNameSelection = $("#assetModule").val();


                $.ajax({
                    url: "/Asset/AddAsset",
                    dataType: 'application/json',
                    data: {
                        assetId: assetID,
                        name: assetName,
                        shortDescription: assetShortDescription,
                        longDescription: assetLongDescription,
                        isPreferredAsset: isPreferredAsset,
                        assetType: assetType,
                        owner: ownerName,
                        moduleName: moduleNameSelection
                    },
                    complete: function (data) {
                        var response = JSON.parse(data.responseText);

                        if (response.validOwner == false || response.duplicateAsset == true) {
                            // invalid owner message or duplicate asset message to user
                            window.alert(response.message);
                        }
                        else {
                            if (response.isAdded == false) {
                                // error message
                                window.alert(response.message);
                            }
                            else {
                                triggeredAlert = true;
                                var button = document.getElementById("sendSignalRAlert");
                                button.click();

                                if (confirm(response.message)) {
                                    // refresh assets list
                                    $("#assetDialog").dialog("close");
                                    var updatedAssetList = response.updatedAssets;
                                    var uAL = updatedAssetList["value"];
                                    buildAssetGrid(uAL);
                                }
                                else {
                                    // refresh assets list
                                    $("#assetDialog").dialog("close");
                                    var updatedAssetList = response.updatedAssets;
                                    var uAL = updatedAssetList["value"];
                                    buildAssetGrid(uAL);
                                }
                            }
                        }
                    }
                });
            },
            fields: [
                { name: "assetId", visible: false, width: 0 },
                { name: "assetName", title: "Name", width: 50 },
                { name: "shortDescription", title: "Short Description", width: 100 },
                { name: "longDescription", title: "Long Description", width: 100 },
                { name: "isPreferredAsset", title: "Is Preferred Asset", width: 50 },
                { name: "typeID", width: 0, visible: false },
                { name: "owner", title: "Owner", width: 50 },
                { name: "moduleID", title: "Module", width: 0, visible: false },
                {
                    type: "control",
                    modeSwitchButton: false,
                    editButton: true,
                    headerTemplate: function () {
                        return $("<button>").attr("type", "button").text("Add")
                            .on("click", function () {
                                showDetailsDialog("Add", {});
                            });
                    }
                }
            ]
        });


        var showDetailsDialog = function (dialogType, arg) {
            $("#assetId").val(arg.assetId);
            $("#assetName").val(arg.assetName);
            $("#shortDescription").val(arg.shortDescription);
            $("#longDescription").val(arg.longDescription);
            document.getElementById("isPreferredAsset").checked = arg.isPreferredAsset;
            $("#assetType").val(arg.typeID);
            $("#owner").val(arg.owner);
            $("#assetModule").val(arg.moduleID);


            formSubmitHandler = function () {
                saveClient(arg, dialogType === "Add");
            };

            $("#assetDialog").dialog("option", "title", dialogType + " Asset")
                .dialog("open");

        };

        var saveClient = function (client, isNew) {
            $("#allAssetGrid").jsGrid(isNew ? "onItemInserted" : "onItemUpdated", client);
        };

        $("#assetDialog").dialog({
            autoOpen: false,
            width: 400,
            close: function () {
                $("#assetForm").validate().resetForm();
                $("#assetForm").find(".error").removeClass("error");
            }
        });

        $("#assetForm").validate({
            rules: {
                assetName: "required",
                shortDescription: "required",
                longDescription: "required",
                owner: "required"
            },
            submitHandler: function () {
                formSubmitHandler();
            }
        });
    }

    function addAssetTypesToForm() {
        $.ajax({
            url: "/Asset/GetAssetTypes",
            dataType: 'application/json',
            complete: function (data) {
                var response = JSON.parse(data.responseText);

                for (var i = 0; i < response.length; i++) {
                    var assetType = response[i]["typeName"];

                    // add each asset type to dropdown selection
                    var value = i + 1;
                    $('<option>').val(value).text(assetType).appendTo('#assetType');
                }
            }
        });
    }

    function addAssetModulesToForm() {
        $.ajax({
            url: "/Asset/GetAssetModules",
            dataType: 'application/json',
            complete: function (data) {
                var response = JSON.parse(data.responseText);

                for (var i = 0; i < response.length; i++) {
                    var assetModule = response[i]["moduleName"];

                    // add each asset type to dropdown selection
                    var value = i + 1;
                    $('<option>').val(value).text(assetModule).appendTo('#assetModule');
                }
            }
        });
    }

    function refreshPage() {
        location.reload();
    }
</script>


<!-- SIGNALR SCRIPT -->
<script type="text/javascript">
    // for tracking whether to display the alert
    var triggeredAlert = false;
    var transport = signalR.TransportType.WebSockets;
    var connection = new signalR.HubConnection("http://localhost:12834/alert", { transport: transport });

    var button = document.getElementById("sendSignalRAlert");
    connection.on('broadcastMessage', (name, message) => {
        // only display if current client did not make the change to the data
        if (triggeredAlert != true) {
            $("#alertBox").removeClass("hidden");
        }
        else {
            // reset alert value
            triggeredAlert = false;
        }
    });
    button.addEventListener("click", event => {
        connection.invoke('send', "alertMessage", "Your view is outdated.  Please refresh the page to get the latest data.");
    });
    connection.start();
</script>